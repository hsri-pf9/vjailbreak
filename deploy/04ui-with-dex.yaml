apiVersion: apps/v1
kind: Deployment
metadata:
  name: vjailbreak-ui
  namespace: migration-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vjailbreak-ui
  template:
    metadata:
      labels:
        app: vjailbreak-ui
    spec:
      serviceAccountName: vjailbreak-ui-sa
      containers:
        - name: vjailbreak-ui-container
          image: quay.io/platform9/vjailbreak-ui:2458-038b041
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            # Pass service account token location
            - name: SERVICE_ACCOUNT_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            # Dex configuration
            - name: DEX_ISSUER
              value: "https://HOST_IP/dex"
            - name: OAUTH2_PROXY_URL
              value: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180"
            # API server configuration
            - name: KUBERNETES_SERVICE_HOST
              value: kubernetes.default.svc.cluster.local
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          volumeMounts:
            - name: sa-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
      volumes:
        - name: sa-token
          projected:
            sources:
            - serviceAccountToken:
                path: token
                expirationSeconds: 7200
            - configMap:
                name: kube-root-ca.crt
                items:
                - key: ca.crt
                  path: ca.crt
            - downwardAPI:
                items:
                - path: namespace
                  fieldRef:
                    fieldPath: metadata.namespace

---
apiVersion: v1
kind: Service
metadata:
  name: vjailbreak-ui-service
  namespace: migration-system
spec:
  selector:
    app: vjailbreak-ui
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# API Ingress WITHOUT OAuth2 auth - for Kubernetes API calls and vpwned SDK
# These use service account tokens and should not be intercepted
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vjailbreak-api-ingress
  namespace: migration-system
  annotations:
    # Backend protocol for Kubernetes API
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "false"
    # Pass Authorization header to backend
    nginx.ingress.kubernetes.io/proxy-set-headers: "nginx-ingress/custom-headers"
    # Explicitly disable OAuth2 auth for API paths
    nginx.ingress.kubernetes.io/auth-url: ""
    # Higher priority to match before UI ingress catches everything  
    nginx.ingress.kubernetes.io/priority: "100"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: kubernetes
            port:
              number: 443
      - path: /apis
        pathType: Prefix
        backend:
          service:
            name: kubernetes
            port:
              number: 443

---
# UI Ingress WITH OAuth2 Proxy authentication
# For dashboard and static assets only
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vjailbreak-ui-ingress
  namespace: migration-system
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Force HTTPS redirect
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Lower priority than API ingress (default is 0)
    nginx.ingress.kubernetes.io/priority: "10"
    # OAuth2 Proxy annotations for UI authentication
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$scheme://$host/dashboard"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /dashboard
        pathType: Prefix
        backend:
          service:
            name: vjailbreak-ui-service
            port:
              number: 80
      - path: /onboarding
        pathType: Prefix
        backend:
          service:
            name: vjailbreak-ui-service
            port:
              number: 80
      - path: /assets
        pathType: Prefix
        backend:
          service:
            name: vjailbreak-ui-service
            port:
              number: 80
      - path: /
        pathType: Exact
        backend:
          service:
            name: vjailbreak-ui-service
            port:
              number: 80

---
# OAuth2 Proxy Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy-ingress
  namespace: oauth2-proxy
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180

